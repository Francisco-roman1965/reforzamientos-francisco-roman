def main():
    # Solicitar el tama√±o de la lista
    while True:
        try:
            tama√±o = int(input("Ingrese el tama√±o de la lista (m√≠nimo 5): "))
            if tama√±o >= 5:
                break
            else:
                print("El tama√±o debe ser al menos 5. Intente nuevamente.")
        except ValueError:
            print("Por favor, ingrese un n√∫mero v√°lido.")

    print(f"\nIngrese {tama√±o} compa√±√≠as relacionadas con TI:")

    # Ingresar las compa√±√≠as originales
    compa√±ias_originales = []
    for i in range(tama√±o):
        while True:
            compa√±ia = input(f"Compa√±√≠a {i + 1}: ").strip()
            if compa√±ia:
                compa√±ias_originales.append(compa√±ia)
                break
            else:
                print("No puede ingresar un nombre vac√≠o. Intente nuevamente.")

    print("\n" + "=" * 50)
    print("Ahora crearemos una copia y agregaremos nombres repetidos:")

    # Crear copia y agregar elementos repetidos
    compa√±ias_copia = compa√±ias_originales.copy()

    # Solicitar cu√°ntos elementos repetidos agregar
    while True:
        try:
            repetidos = int(input("\n¬øCu√°ntos elementos repetidos desea agregar? "))
            if repetidos >= 0:
                break
            else:
                print("Debe ser un n√∫mero positivo o cero.")
        except ValueError:
            print("Por favor, ingrese un n√∫mero v√°lido.")

    # Agregar elementos repetidos
    for i in range(repetidos):
        while True:
            compa√±ia = input(f"Elemento repetido {i + 1}: ").strip()
            if compa√±ia:
                # Verificar si ya existe en la lista original
                if compa√±ia in compa√±ias_originales:
                    compa√±ias_copia.append(compa√±ia)
                    break
                else:
                    print("ADVERTENCIA: Esta compa√±√≠a no existe en la lista original.")
                    confirmar = input("¬øDesea agregarla de todas formas? (s/n): ").lower()
                    if confirmar == 's':
                        compa√±ias_copia.append(compa√±ia)
                        break
            else:
                print("No puede ingresar un nombre vac√≠o.")

    # Obtener lista sin duplicados
    compa√±ias_sin_repetir = list(set(compa√±ias_copia))

    # Mostrar resultados
    print("\n" + "=" * 50)
    print("RESULTADOS FINALES:")
    print("=" * 50)

    print(f"\nüìã Lista inicial ({len(compa√±ias_originales)} elementos):")
    for i, compa√±ia in enumerate(compa√±ias_originales, 1):
        print(f"  {i}. {compa√±ia}")

    print(f"\nüìù Lista con elementos repetidos ({len(compa√±ias_copia)} elementos):")
    for i, compa√±ia in enumerate(compa√±ias_copia, 1):
        print(f"  {i}. {compa√±ia}")

    print(f"\n‚úÖ Lista sin elementos repetidos ({len(compa√±ias_sin_repetir)} elementos):")
    for i, compa√±ia in enumerate(sorted(compa√±ias_sin_repetir), 1):
        print(f"  {i}. {compa√±ia}")

    # Mostrar estad√≠sticas
    print(f"\nüìä Estad√≠sticas:")
    print(f"  - Elementos en lista original: {len(compa√±ias_originales)}")
    print(f"  - Elementos en lista con repetidos: {len(compa√±ias_copia)}")
    print(f"  - Elementos √∫nicos: {len(compa√±ias_sin_repetir)}")
    print(f"  - Elementos repetidos agregados: {repetidos}")


if __name__ == "__main__":
    print("üêç PROGRAMA DE GESTI√ìN DE COMPA√ë√çAS TI üêç")
    print("Este programa maneja listas de compa√±√≠as de tecnolog√≠a")
    main()